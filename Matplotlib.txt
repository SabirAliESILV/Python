import matplotlib.pyplot as plt
import numpy as np
%matplotlib inline


x = np.linspace(-2,2,101)
y = x**2
plt.xlabel("x")
plt.ylabel("f(x)")
plt.xlim(-1.5,1.5)
plt.ylim(-0.5,2.5)
plt.plot(x,y)
plt.title("Chart Title")
plt.show()


x = np.linspace(0,3*np.pi,500)
plt.plot(x,np.sin(x**2))
plt.title('A simple chirp')


x = np.linspace(-2,2,101)
plt.xlabel("x")
plt.ylabel("f(x)")
y = x ** 2
plt.plot(x, y, 'g.', label = "x**2")
y2 = x ** 4
plt.plot(x, y2, 'ro', label = "x**4")
plt.legend()
plt.show()
plt.savefig("fig1.png")


num = int(input("Number of points to draw : "))
x = np.linspace(-1,1,num)
y = np.cos(2*np.pi*x)
plt.plot(x,y)
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("Body function (2pix)")
plt.savefig("cos2pix.png")


num = int(input("Number of points to draw : "))
x = np.linspace(-1,1,num)
y = np.cos(2*np.pi*x)
plt.plot(x,y)
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("Body function (2pix)")
plt.savefig("cos2pix.png")


try:
  num = int(input("Number of points to draw : "))
except:
  print("Something went wrong")
else:
  x = np.linspace(0,4,num)
  y = np.sin(np.pi*x)*np.sin(20*np.pi*x)*np.exp(-x)
  plt.plot(x,y)


num = int(input("Number of points to represent : "))
temp = int(input("Temperature : "))
vm = np.linspace(2,10,num)
p = 0.08206 * temp / vm
plt.plot(vm,p)
plt.xlabel("Vm")
plt.ylabel("p")
plt.title("Isotherm (ideal gas)")
plt.savefig("isotherm.jpg")
plt.show()


num = int(input("Number of points to represent : "))
iso = int(input("Number of isotherms : "))
for i in range (0,iso) :
  temp = int(input("Temperature of isotherm {} : ".format(i)))
  vm = np.linspace(2,10,num)
  p = 0.08206 * temp / vm
  plt.plot(vm,p, label = str(temp) + " K")
plt.xlabel("Vm")
plt.ylabel("p")
plt.title("Isotherms (ideal gas)")
plt.legend()
plt.savefig("isotherms.jpg")
plt.show()


num = int(input("Number of points to represent : "))
init = int(input("Initial value : "))
fin = int(input("Final value : "))
x0 = int(input("x0 : "))
s = float(input("s : "))
x = np.linspace(init,fin,num)
y = (1 / np.sqrt(2*np.pi))*np.exp((-1/2)*((x - x0)**2/s**2))
plt.plot(x,y)
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("Gaussian Function")
plt.show()


num = int(input("Number of points to draw : "))
x = np.linspace(0,3,num)
y = np.exp(-x)
y2 = np.sin(3*np.pi*x)*np.exp(-x)
plt.plot(x,y, label = "e-x")
plt.plot(x,y2, label = "sin(3pix)e-x")
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("Functions")
plt.legend()


num = int(input("Number of points to represent : "))
it = int(input("Number of functions to draw : "))
init = int(input("Initial value : "))
fin = int(input("Final value : "))
x0 = int(input("x0 : "))
s = float(input("s : "))
x = np.linspace(init,fin,num)
y = (1 / np.sqrt(2*np.pi))*np.exp((-1/2)*((x - x0)**2/s**2))
plt.plot(x,y)
plt.xlabel("x")
plt.ylabel("f(x)")
plt.title("Gaussian Function")
plt.show()